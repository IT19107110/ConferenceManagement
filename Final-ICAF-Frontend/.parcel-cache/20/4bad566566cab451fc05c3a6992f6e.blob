var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
_parcelHelpers.export(exports, "templateReducer", function () {
  return templateReducer;
});
var _actionsTemplateActions = require("../actions/templateActions");
const initialState = {
  templates: [],
  approveTemplates: []
};
const templateReducer = (state = initialState, action) => {
  switch (action.type) {
    case _actionsTemplateActions.ACTION_TYPES.ADD_TEMPLATE:
      return {
        ...state,
        templates: [...state.templates, action.payload]
      };
    case _actionsTemplateActions.ACTION_TYPES.GET_ALL_TEMPLATES:
      return {
        ...state,
        templates: [...action.payload]
      };
    case _actionsTemplateActions.ACTION_TYPES.DELETE_TEMPLATE:
      return {
        ...state,
        templates: state.templates.filter(x => x._id != action.payload.id)
      };
    case _actionsTemplateActions.ACTION_TYPES.GET_ALL_APPROVED_TEMPLATE_LIST:
      return {
        ...state,
        approveTemplates: [...action.payload]
      };
    case _actionsTemplateActions.ACTION_TYPES.APPROVED_TEMPLATE:
      return {
        ...state,
        templates: state.templates.map(x => x._id === action.payload._id ? action.payload : x)
      };
    default:
      return state;
  }
};
