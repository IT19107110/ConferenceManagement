var helpers = require("../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require("react");
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _reactRedux = require("react-redux");
  var _actionsAuthActions = require("../../../actions/authActions");
  var _firebase = require("../../firebase");
  var _commonProgressBarProgress = require("../../common/ProgressBar/Progress");
  var _commonProgressBarProgressDefault = _parcelHelpers.interopDefault(_commonProgressBarProgress);
  var _reactstrap = require("reactstrap");
  var _commonNavbarNavbar = require("../../common/Navbar/Navbar");
  var _commonNavbarNavbarDefault = _parcelHelpers.interopDefault(_commonNavbarNavbar);
  var _commonFooterFooter = require("../../common/Footer/Footer");
  var _commonFooterFooterDefault = _parcelHelpers.interopDefault(_commonFooterFooter);
  var _jsxFileName = "C:\\Users\\Soujia\\Desktop\\New folder\\Final_AF\\Final-ICAF-Frontend\\src\\pages\\RegPresenter\\RegPresenter.js";
  const mystyle = {
    background: 'linear-gradient(to right, #2C3E50, #34495E, #7F8C8D,#AAB7B8)'
  };
  const myistyle = {
    background: "white",
    marginLeft: 70,
    marginRight: 70,
    marginTop: 70,
    marginBottom: 70,
    boxShadow: "5px 8px 5px #9E9E9E"
  };
  class RegPresenter extends _react.Component {
    constructor(props) {
      super(props);
      this.onRegister = this.onRegister.bind(this);
      this.uploadImage = this.uploadImage.bind(this);
      this.uploadWorkshopImage = this.uploadWorkshopImage.bind(this);
      this.onValueChange = this.onValueChange.bind(this);
      this.state = {
        firstName: "",
        lastName: "",
        email: "",
        password: "",
        jobStatus: "",
        universityOrWorkPlace: "",
        contactNumber: "",
        profileImg: "",
        workshopName: "",
        workshopImage: "",
        description: "",
        timeTo: "",
        timeFrom: "",
        date: "",
        fileLink: "",
        processStatus: false,
        processStatusAlert: "",
        processStatusMessage: "",
        profileProcessStatus: false,
        profileProcessStatusAlert: "",
        profileProcessStatusMessage: "",
        workshopImageProcessStatus: false,
        workshopImageProcessStatusAlert: "",
        workshopImageProcessStatusMessage: "",
        fileProcessStatus: false,
        fileProcessStatusAlert: "",
        fileProcessStatusMessage: "",
        uploadProfilePercentage: 0,
        uploadWorkshopImagePercentage: 0,
        uploadWorkshopFilePercentage: 0
      };
    }
    onValueChange(e) {
      this.setState({
        [e.target.name]: e.target.value
      });
    }
    onRegister(e) {
      e.preventDefault();
      this.setState({
        processStatus: true,
        processStatusAlert: "alert alert-warning",
        processStatusMessage: "Please Wait..."
      });
      const registerPresenterObj = {
        firstName: this.state.firstName,
        lastName: this.state.lastName,
        email: this.state.email,
        password: this.state.password,
        jobStatus: this.state.jobStatus,
        universityOrWorkPlace: this.state.universityOrWorkPlace,
        contactNumber: this.state.contactNumber,
        profileImg: this.state.profileImg,
        workshop: {
          workshopName: this.state.workshopName,
          workshopImage: this.state.workshopImage,
          description: this.state.description,
          timeTo: this.state.timeTo,
          timeFrom: this.state.timeFrom,
          date: this.state.date,
          fileLink: this.state.fileLink,
          submittedDate: new Date(),
          approved: false
        }
      };
      this.props.presenterRegister(registerPresenterObj, () => {
        this.setState({
          processStatusAlert: "alert alert-success",
          processStatusMessage: "Register successful"
        });
      }, () => {
        this.setState({
          processStatusAlert: "alert alert-danger",
          processStatusMessage: "Something went wrong. Please with different email."
        });
      });
    }
    uploadFile(e) {
      if (e.target.files[0] !== null) {
        this.setState({
          fileProcessStatus: true,
          fileProcessStatusAlert: "alert alert-warning",
          fileProcessStatusMessage: "File Uploading..."
        });
        const uploadTask = _firebase.storage.ref(`workshopfile/${e.target.files[0].name}`).put(e.target.files[0]);
        uploadTask.on("state_changed", snapshot => {
          // progress function
          const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);
          this.setState({
            uploadWorkshopFilePercentage: progress
          });
        }, error => {
          // error function
          console.log(error);
        }, () => {
          // complete function
          _firebase.storage.ref("workshopfile").child(e.target.files[0].name).getDownloadURL().then(url => {
            console.log(url);
            this.setState({
              fileLink: url
            });
            this.setState({
              fileProcessStatusAlert: "alert alert-success",
              fileProcessStatusMessage: "File uploaded successfully"
            });
          });
        });
      } else {
        this.setState({
          fileProcessStatusAlert: "alert alert-danger",
          fileProcessStatusMessage: "Something went wrong"
        });
      }
    }
    uploadWorkshopImage(e) {
      if (e.target.files[0] !== null) {
        this.setState({
          workshopImageProcessStatus: true,
          workshopImageProcessStatusAlert: "alert alert-warning",
          workshopImageProcessStatusMessage: "Image Uploading..."
        });
        const uploadTask = _firebase.storage.ref(`workshopimages/${e.target.files[0].name}`).put(e.target.files[0]);
        uploadTask.on("state_changed", snapshot => {
          // progress function
          const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);
          this.setState({
            uploadWorkshopImagePercentage: progress
          });
        }, error => {
          // error function
          console.log(error);
        }, () => {
          // complete function
          _firebase.storage.ref("workshopimages").child(e.target.files[0].name).getDownloadURL().then(url => {
            console.log(url);
            this.setState({
              workshopImage: url
            });
            this.setState({
              workshopImageProcessStatusAlert: "alert alert-success",
              workshopImageProcessStatusMessage: "Image uploaded successfully"
            });
          });
        });
      } else {
        this.setState({
          workshopImageProcessStatusAlert: "alert alert-danger",
          workshopImageProcessStatusMessage: "Something went wrong"
        });
      }
    }
    uploadImage(e) {
      if (e.target.files[0] !== null) {
        this.setState({
          profileProcessStatus: true,
          profileProcessStatusAlert: "alert alert-warning",
          profileProcessStatusMessage: "Image Uploading..."
        });
        const uploadTask = _firebase.storage.ref(`presenter/${e.target.files[0].name}`).put(e.target.files[0]);
        uploadTask.on("state_changed", snapshot => {
          // progress function
          const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);
          this.setState({
            uploadProfilePercentage: progress
          });
        }, error => {
          // error function
          console.log(error);
        }, () => {
          // complete function
          _firebase.storage.ref("presenter").child(e.target.files[0].name).getDownloadURL().then(url => {
            console.log(url);
            this.setState({
              profileImg: url
            });
            this.setState({
              profileProcessStatusAlert: "alert alert-success",
              profileProcessStatusMessage: "Image uploaded successfully"
            });
          });
        });
      } else {
        this.setState({
          profileProcessStatusAlert: "alert alert-danger",
          profileProcessStatusMessage: "Something went wrong"
        });
      }
    }
    render() {
      return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 276,
            columnNumber: 7
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_commonNavbarNavbarDefault.default, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 277,
            columnNumber: 9
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Container, {
          className: "mt-5",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 278,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("h3", {
          className: "text-center text-white mb-5",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 279,
            columnNumber: 11
          }
        }, "PRESENTER REGISTRATION"), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Card, {
          style: mystyle,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 282,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.CardBody, {
          style: myistyle,
          className: "p-5",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 283,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Form, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 284,
            columnNumber: 15
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          row: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 285,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Label, {
          for: "First Name",
          sm: 2,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 286,
            columnNumber: 19
          }
        }, "First Name"), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Col, {
          sm: 5,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 289,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Input, {
          type: "text",
          name: "firstName",
          id: "firstName",
          placeholder: "Enter first name",
          onChange: e => {
            this.onValueChange(e);
          },
          required: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 290,
            columnNumber: 21
          }
        }))), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          row: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 303,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Label, {
          for: "Last Name ",
          sm: 2,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 304,
            columnNumber: 19
          }
        }, "Last Name"), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Col, {
          sm: 5,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 307,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Input, {
          type: "text",
          name: "lastName",
          id: "lastName",
          placeholder: "Enter last name",
          onChange: e => {
            this.onValueChange(e);
          },
          required: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 308,
            columnNumber: 21
          }
        }))), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          row: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 321,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Label, {
          for: "Last Name ",
          sm: 2,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 322,
            columnNumber: 19
          }
        }, "Contact number"), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Col, {
          sm: 5,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 325,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Input, {
          type: "tel",
          name: "contactNumber",
          id: "contactNumber",
          placeholder: "Enter the telephone number",
          onChange: e => {
            this.onValueChange(e);
          },
          required: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 326,
            columnNumber: 21
          }
        }))), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          row: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 339,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Label, {
          for: "email",
          sm: 2,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 340,
            columnNumber: 19
          }
        }, "Email"), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Col, {
          sm: 10,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 343,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Input, {
          type: "email",
          name: "email",
          id: "email",
          placeholder: "Enter email",
          onChange: e => {
            this.onValueChange(e);
          },
          required: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 344,
            columnNumber: 21
          }
        }))), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          row: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 356,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Label, {
          for: "password",
          sm: 2,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 357,
            columnNumber: 19
          }
        }, "Password"), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Col, {
          sm: 10,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 360,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Input, {
          type: "password",
          name: "password",
          id: "password",
          placeholder: "Enter password",
          onChange: e => {
            this.onValueChange(e);
          },
          required: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 361,
            columnNumber: 21
          }
        }))), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          row: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 374,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Label, {
          for: "jobstatus",
          sm: 2,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 375,
            columnNumber: 19
          }
        }, "Job Status"), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Col, {
          sm: 10,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 378,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Input, {
          type: "select",
          name: "jobStatus",
          id: "jobStatus",
          onChange: e => {
            this.onValueChange(e);
          },
          required: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 379,
            columnNumber: 21
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("option", {
          unselectable: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 388,
            columnNumber: 23
          }
        }, "Select Job Status"), /*#__PURE__*/_reactDefault.default.createElement("option", {
          value: "Professional",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 389,
            columnNumber: 23
          }
        }, "Professional"), /*#__PURE__*/_reactDefault.default.createElement("option", {
          value: "Student",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 390,
            columnNumber: 23
          }
        }, "Student"), /*#__PURE__*/_reactDefault.default.createElement("option", {
          value: "Industry Expert",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 391,
            columnNumber: 23
          }
        }, "Industry Expert")))), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          row: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 396,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Label, {
          for: "exampleFile",
          sm: 2,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 397,
            columnNumber: 19
          }
        }, "Profile picture"), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Col, {
          sm: 10,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 400,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Input, {
          type: "file",
          name: "file",
          id: "exampleFile",
          onChange: e => {
            this.uploadImage(e);
          },
          required: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 401,
            columnNumber: 21
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormText, {
          color: "muted",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 410,
            columnNumber: 21
          }
        }, "This is some placeholder block-level help text for the above input. It's a bit lighter and easily wraps to a new line."))), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 418,
            columnNumber: 17
          }
        }, this.state.profileProcessStatus ? /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: this.state.profileProcessStatusAlert,
          role: "alert",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 420,
            columnNumber: 21
          }
        }, this.state.profileProcessStatusMessage) : ""), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          row: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 431,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_commonProgressBarProgressDefault.default, {
          percentage: this.state.uploadProfilePercentage,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 432,
            columnNumber: 19
          }
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          row: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 435,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Label, {
          for: "universityWorkplace",
          sm: 2,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 436,
            columnNumber: 19
          }
        }, "University/Workplace"), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Col, {
          sm: 5,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 439,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Input, {
          type: "text",
          name: "universityOrWorkPlace",
          id: "universityOrWorkPlace",
          placeholder: "Enter the university or the workplace",
          onChange: e => {
            this.onValueChange(e);
          },
          required: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 440,
            columnNumber: 21
          }
        }))))))), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Container, {
          className: "mt-5",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 457,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Card, {
          style: mystyle,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 458,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.CardBody, {
          style: myistyle,
          className: "p-5",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 459,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Form, {
          onSubmit: this.onRegister,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 460,
            columnNumber: 15
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          row: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 461,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Label, {
          for: "WorkshopName",
          sm: 2,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 462,
            columnNumber: 19
          }
        }, "Workshop Name"), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Col, {
          sm: 5,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 465,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Input, {
          type: "text",
          name: "workshopName",
          id: "workshopName",
          placeholder: "Enter workshop name",
          onChange: e => {
            this.onValueChange(e);
          },
          required: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 466,
            columnNumber: 21
          }
        }))), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          row: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 479,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Label, {
          for: "exampleFile",
          sm: 2,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 480,
            columnNumber: 19
          }
        }, "Workshop Banner"), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Col, {
          sm: 10,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 483,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Input, {
          type: "file",
          name: "file",
          id: "exampleFile",
          onChange: e => {
            this.uploadWorkshopImage(e);
          },
          required: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 484,
            columnNumber: 21
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormText, {
          color: "muted",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 493,
            columnNumber: 21
          }
        }, "This is some placeholder block-level help text for the above input. It's a bit lighter and easily wraps to a new line."))), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 501,
            columnNumber: 17
          }
        }, this.state.workshopImageProcessStatus ? /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: this.state.workshopImageProcessStatusAlert,
          role: "alert",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 503,
            columnNumber: 21
          }
        }, this.state.workshopImageProcessStatusMessage) : ""), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          row: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 514,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_commonProgressBarProgressDefault.default, {
          percentage: this.state.uploadWorkshopImagePercentage,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 515,
            columnNumber: 19
          }
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          row: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 520,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Label, {
          for: "date",
          sm: 2,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 521,
            columnNumber: 19
          }
        }, "Date"), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Col, {
          sm: 5,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 524,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Input, {
          type: "date",
          name: "date",
          id: "date",
          onChange: e => {
            this.onValueChange(e);
          },
          required: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 525,
            columnNumber: 21
          }
        }))), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          row: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 537,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Label, {
          for: "timeFrom",
          sm: 2,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 538,
            columnNumber: 19
          }
        }, "Starting time"), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Col, {
          sm: 5,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 541,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Input, {
          type: "time",
          name: "timeFrom",
          id: "timeFrom",
          onChange: e => {
            this.onValueChange(e);
          },
          required: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 542,
            columnNumber: 21
          }
        }))), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          row: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 554,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Label, {
          for: "timeTo ",
          sm: 2,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 555,
            columnNumber: 19
          }
        }, "Ending time"), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Col, {
          sm: 5,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 558,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Input, {
          type: "time",
          name: "timeTo",
          id: "timeTo",
          onChange: e => {
            this.onValueChange(e);
          },
          required: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 559,
            columnNumber: 21
          }
        }))), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          row: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 571,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Label, {
          for: "exampleFile",
          sm: 2,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 572,
            columnNumber: 19
          }
        }, "File"), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Col, {
          sm: 10,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 575,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Input, {
          type: "file",
          name: "file",
          id: "exampleFile",
          onChange: e => {
            this.uploadFile(e);
          },
          required: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 576,
            columnNumber: 21
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormText, {
          color: "muted",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 585,
            columnNumber: 21
          }
        }, "This is some placeholder block-level help text for the above input. It's a bit lighter and easily wraps to a new line."))), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 593,
            columnNumber: 17
          }
        }, this.state.fileProcessStatus ? /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: this.state.fileProcessStatusAlert,
          role: "alert",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 595,
            columnNumber: 21
          }
        }, this.state.fileProcessStatusMessage) : ""), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          row: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 606,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_commonProgressBarProgressDefault.default, {
          percentage: this.state.uploadWorkshopFilePercentage,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 607,
            columnNumber: 19
          }
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          row: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 612,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Label, {
          for: "exampleText",
          sm: 2,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 613,
            columnNumber: 19
          }
        }, "Description"), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Col, {
          sm: 10,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 616,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Input, {
          type: "textarea",
          name: "description",
          id: "description",
          placeholder: "Enter description",
          onChange: e => {
            this.onValueChange(e);
          },
          required: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 617,
            columnNumber: 21
          }
        }))), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 629,
            columnNumber: 17
          }
        }, this.state.processStatus ? /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: this.state.processStatusAlert,
          role: "alert",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 631,
            columnNumber: 21
          }
        }, this.state.processStatusMessage) : ""), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          check: true,
          row: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 639,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Col, {
          sm: {
            size: 10,
            offset: 2
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 640,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Button, {
          className: "btn btn-warning",
          type: "submit",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 641,
            columnNumber: 21
          }
        }, "Submit"))))))), /*#__PURE__*/_reactDefault.default.createElement("br", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 651,
            columnNumber: 9
          }
        }), /*#__PURE__*/_reactDefault.default.createElement("br", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 652,
            columnNumber: 9
          }
        }), /*#__PURE__*/_reactDefault.default.createElement("br", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 653,
            columnNumber: 9
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_commonFooterFooterDefault.default, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 654,
            columnNumber: 9
          }
        }))
      );
    }
  }
  const mapActionToProps = {
    presenterRegister: _actionsAuthActions.presenterRegister
  };
  exports.default = _reactRedux.connect(null, mapActionToProps)(RegPresenter);
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
