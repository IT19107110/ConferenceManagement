var helpers = require("../../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "CreateReviewer", function () {
    return CreateReviewer;
  });
  var _react = require("react");
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _reactRedux = require("react-redux");
  var _actionsReviewerActions = require("../../../../actions/reviewerActions");
  var _reactstrap = require("reactstrap");
  var _jsxFileName = "C:\\Users\\Soujia\\Desktop\\AF_Final\\AF_Frontend\\ICAF-Frontend-main\\src\\modules\\AdminPageModules\\AdminReviewerModule\\CreateReviewer.js";
  class CreateReviewer extends _react.Component {
    constructor(props) {
      super(props);
      this.onValueChange = this.onValueChange.bind(this);
      this.onRegister = this.onRegister.bind(this);
      this.state = {
        firstName: "",
        lastName: "",
        email: "",
        password: "",
        processStatus: false,
        processStatusAlert: "",
        processStatusMessage: ""
      };
    }
    onValueChange = e => this.setState({
      [e.target.name]: e.target.value
    });
    onRegister(e) {
      e.preventDefault();
      this.setState({
        processStatus: true,
        processStatusAlert: "alert alert-warning",
        processStatusMessage: "Please Wait..."
      });
      const registerReviewerObj = {
        firstName: this.state.firstName,
        lastName: this.state.lastName,
        email: this.state.email,
        password: this.state.password
      };
      this.props.reviewerRegister(registerReviewerObj, () => {
        this.setState({
          processStatusAlert: "alert alert-success",
          processStatusMessage: "Register successful",
          firstName: "",
          lastName: "",
          email: "",
          password: ""
        });
      }, () => {
        this.setState({
          processStatusAlert: "alert alert-danger",
          processStatusMessage: "Something went wrong. Please try again."
        });
      });
    }
    render() {
      return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 67,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "row justify-content-center",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 68,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Card, {
          style: {
            width: '40rem'
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 69,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.CardBody, {
          className: "p-5",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 71,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("h3", {
          style: {
            textAlign: "center"
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 72,
            columnNumber: 13
          }
        }, "CREATE EDITOR"), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Form, {
          onSubmit: this.onRegister,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 73,
            columnNumber: 15
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 74,
            columnNumber: 17
          }
        }, this.state.processStatus ? /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: this.state.processStatusAlert,
          role: "alert",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 76,
            columnNumber: 21
          }
        }, this.state.processStatusMessage) : ""), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 83,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Label, {
          for: "firstName",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 84,
            columnNumber: 21
          }
        }, "First Name"), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Input, {
          type: "text",
          name: "firstName",
          id: "firstName",
          placeholder: "Enter First Name",
          value: this.state.firstName,
          onChange: e => {
            this.onValueChange(e);
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 87,
            columnNumber: 23
          }
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 99,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Label, {
          for: "lastName",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 100,
            columnNumber: 21
          }
        }, "Last Name"), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Input, {
          type: "text",
          name: "lastName",
          id: "lastName",
          placeholder: "Enter Last Name",
          value: this.state.lastName,
          onChange: e => {
            this.onValueChange(e);
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 103,
            columnNumber: 23
          }
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 115,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Label, {
          for: "email",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 116,
            columnNumber: 21
          }
        }, "Email"), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Input, {
          type: "email",
          name: "email",
          id: "email",
          placeholder: "Enter email",
          value: this.state.email,
          onChange: e => {
            this.onValueChange(e);
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 119,
            columnNumber: 23
          }
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 131,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Label, {
          for: "password",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 132,
            columnNumber: 21
          }
        }, "Password"), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Input, {
          type: "password",
          name: "password",
          id: "password",
          placeholder: "Enter Password",
          value: this.state.password,
          onChange: e => {
            this.onValueChange(e);
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 135,
            columnNumber: 23
          }
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.FormGroup, {
          check: true,
          row: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 147,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Col, {
          sm: {
            size: 40,
            offset: 4
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 148,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactstrap.Button, {
          className: "btn btn-dark",
          type: "submit",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 149,
            columnNumber: 21
          }
        }, "Submit"))))))))
      );
    }
  }
  const mapActionToProps = {
    reviewerRegister: _actionsReviewerActions.reviewerRegister
  };
  exports.default = _reactRedux.connect(null, mapActionToProps)(CreateReviewer);
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
