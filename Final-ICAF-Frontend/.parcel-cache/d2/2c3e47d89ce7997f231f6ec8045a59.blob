var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
_parcelHelpers.export(exports, "latestNewsReducer", function () {
  return latestNewsReducer;
});
var _actionsLatestNewsActions = require("../actions/latestNewsActions");
const initialState = {
  latestNewsList: [],
  approvedNewsList: [],
  unapprovedNewsList: []
};
const latestNewsReducer = (state = initialState, action) => {
  switch (action.type) {
    case _actionsLatestNewsActions.ACTION_TYPES.ADD_LATEST_NEWS:
      return {
        ...state,
        latestNewsList: [...state.latestNewsList, action.payload]
      };
    case _actionsLatestNewsActions.ACTION_TYPES.GET_ALL_LATEST_NEWS:
      return {
        ...state,
        latestNewsList: [...action.payload]
      };
    case _actionsLatestNewsActions.ACTION_TYPES.GET_ALL_APPROVED_NEWS:
      return {
        ...state,
        approvedNewsList: [...action.payload]
      };
    case _actionsLatestNewsActions.ACTION_TYPES.GET_ALL_UNAPPROVED_NEWS:
      return {
        ...state,
        unapprovedNewsList: [...action.payload]
      };
    case _actionsLatestNewsActions.ACTION_TYPES.APPROVE_NEWS:
      return {
        ...state,
        unapprovedNewsList: state.unapprovedNewsList.map(x => x._id === action.payload._id ? action.payload : x)
      };
    case _actionsLatestNewsActions.ACTION_TYPES.DELETE_NEWS:
      return {
        ...state,
        latestNewsList: state.latestNewsList.filter(x => x._id !== action.payload)
      };
    default:
      return state;
  }
};
